PROJ_CODENAME="${PROJ_CODENAME:-djample}"
IMAGE_NAME="${IMAGE_NAME:-test-${PROJ_CODENAME}}"; _IMAGE_NAME_="`echo ${IMAGE_NAME} | sed s/-/_/`"
PROJ_GIT_DIR=/cnicg/projs/${IMAGE_NAME}
# 产品/项目名称
# 如果需要 pyenv 则需要设置：python 版本、虚拟环境名、pyenv 虚拟环境目录；否则置空
PROJ_PYTHON_VER="${PROJ_PYTHON_VER:-3.6.6}"
PROJ_PYTHON_ENV="${PROJ_PYTHON_ENV:-${IMAGE_NAME}}"
PROJ_PYTHON_BIN="${PROJ_PYTHON_BIN:-/cnicg/app/pyenv/versions/${PROJ_PYTHON_ENV}/bin}"
# 如果不使用 pyenv，则需要设置对应的 python、pip 路径；否则跳过
PROJ_PYTHON="${PROJ_PYTHON:-${PROJ_PYTHON_BIN}/python3}"
PROJ_PIP="${PROJ_PIP:-${PROJ_PYTHON_BIN}/pip3}"

# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/
SECRET_KEY="${SECRET_KEY:-00000111112222233333444445555566666777778888899999}"

# 静态资源 URL 及目录
STATIC_URL="${STATIC_URL:-/dj/static/}"
STATIC_ROOT="${STATIC_ROOT:-${PROJ_GIT_DIR}/web}"

# 动态资源 URL 及目录
MEDIA_URL="${MEDIA_URL:-/media/}"
MEDIA_ROOT="${MEDIA_ROOT:-/cnicg/media/${IMAGE_NAME}}"

# 日志
PROJ_LOG_DIR="${PROJ_LOG_DIR:-/cnicg/logs/${IMAGE_NAME}}"
PROG_LOG_FILE="${PROG_LOG_FILE:-${PROJ_LOG_DIR}/root.log}"

# raven(sentry)
RAVEN_DSN="${RAVEN_DSN:-}"

# 容器运行端口
PROJ_WEB_PORT="${PROJ_WEB_PORT:-8000}"
# 域名
PROJ_DOMAIN="${PROJ_DOMAIN:-${IMAGE_NAME}.work.com}"
# 前端代码目录
PUB_WWW_ROOT="${PUB_WWW_ROOT:-${PROJ_GIT_DIR}/www/default/dist}"
ADMIN_WWW_ROOT="${ADMIN_WWW_ROOT:-${PROJ_GIT_DIR}/www/admin/dist}"
#
# PROJ_GRPC_PORT="${PROJ_GRPC_PORT:-8002}"

# 前端通过 node/nuxt 启动服务
# NUXT_WEB_PORT="${NUXT_WEB_PORT:-8001}"
# NUXT_WEB_PATH="${NUXT_WEB_PATH:-${PROJ_GIT_DIR}/www/nuxt}"
# NUXT_NODE_BIN="${NUXT_NODE_BIN:-/cnicg/app/nvm/versions/node/v10.15.3/bin/node}"

# 数据库连接配置(支持多库，参考示例。使用空格分开，使用"[alias]"来区分 alias)
DB="${DB:-mysql://root:example@127.0.0.1:3306}"
DB_URI="${DB_URI:-${DB}/${_IMAGE_NAME_}?charset=utf8}"

# 指定数据库对应的包 "ALIAS=app_label"
DATABASE_APPS="${DATABASE_APPS:-}"

# 数据库结构变更操作(migrate)忽略 "ALIAS" 数据库
DATABASE_NEVER_MIGRATES="${DATABASE_NEVER_MIGRATES:-}"

# cache
CACHES="${CACHES:-redis://127.0.0.1:6379/1}"

# session
SESSION_ENGINE="${SESSION_ENGINE:-django.contrib.sessions.backends.cache}"
SESSION_CACHE_ALIAS="${SESSION_CACHE_ALIAS:-default}"

# celery
CELERY_BROKER_URL="${CELERY_BROKER_URL:-amqp://127.0.0.1/%2f${IMAGE_NAME}}"
CELERY_RESULT_BACKEND="${CELERY_RESULT_BACKEND:-db+${DB}/${_IMAGE_NAME_}}"
CELERY_BEAT_CONFIG="${CELERY_BEAT_CONFIG:-${PROJ_GIT_DIR}/scripts/host/celery_beat.yml}"
CELERY_LOG_FILE="${CELERY_LOG_FILE:-${PROJ_LOG_DIR}/celery.log}"
CELERY_ENABLE_DELAY="${CELERY_ENABLE_DELAY:-True}"

##############
# for gauge  #
##############

GAUGE_ENV="${GAUGE_ENV:-ci}"
G_ENDPOINT="${G_ENDPOINT:-http://localhost:${PROJ_WEB_PORT}}"
G_SUPER="${G_SUPER:-SUPER_USERNAME SUPER_PASSWORD}"
G_DEFAULT_PASSWORD="${G_DEFAULT_PASSWORD:-DEFAULT_PASSWORD}"
